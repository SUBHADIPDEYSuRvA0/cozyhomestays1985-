<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title><%= typeof title !== 'undefined' ? title : 'CozyHomeStays Admin' %></title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <% if (typeof metaDescription !== 'undefined') { %>
    <meta name="description" content="<%= metaDescription %>">
  <% } %>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@300;400;500;600;700&family=Space+Grotesk:wght@400;500;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --primary: #dfe0ff;
      --primary-dark: #000000;
      --primary-light: #ffffff;
      --secondary: #10b981;
      --accent: #f43f5e;
      --dark: #0f172a;
      --light: #f8fafc;
      --glass-bg: rgba(255, 255, 255, 0.15);
      --glass-border: rgba(255, 255, 255, 0.2);
      --card-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
      --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);
      min-height: 100vh;
      height: 100vh;
      font-family: 'Outfit', sans-serif;
      color: var(--light);
      overflow-x: hidden;
      position: relative;
    }

    body::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: 
        radial-gradient(circle at 20% 30%, rgba(99, 102, 241, 0.15) 0%, transparent 40%),
        radial-gradient(circle at 80% 70%, rgba(16, 185, 129, 0.1) 0%, transparent 40%);
      z-index: -1;
    }

    .container {
      width: 100%;
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 1.5rem;
    }

    .site-header {
      padding: 1.5rem 0;
      position: relative;
      margin-bottom: 3rem;
    }

    .header-content {
      background: rgba(15, 23, 42, 0.7);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.1);
      border-radius: 16px;
      padding: 1.5rem 2rem;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: space-between;
    }

    @media (min-width: 768px) {
      .header-content {
        flex-direction: row;
      }
    }

    .site-title {
      font-family: 'Space Grotesk', sans-serif;
      font-size: 2.2rem;
      font-weight: 700;
      background: linear-gradient(to right, #6366f1, #10b981);
      -webkit-background-clip: text;
      background-clip: text;
      color: transparent;
      margin-bottom: 0.15em;
      letter-spacing: -0.5px;
    }

    .site-subtitle {
      font-size: 1.1rem;
      color: rgba(248, 250, 252, 0.7);
      letter-spacing: 0.5px;
    }

    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
      padding: 0.75rem 1.5rem;
      border-radius: 12px;
      font-weight: 500;
      font-size: 1rem;
      cursor: pointer;
      transition: var(--transition);
      border: none;
      outline: none;
      text-decoration: none;
    }

    .btn-primary {
      background: linear-gradient(135deg, var(--primary), var(--primary-dark));
      color: white;
      box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);
    }

    .btn-primary:hover {
      box-shadow: 0 6px 16px rgba(99, 102, 241, 0.4);
      transform: translateY(-2px);
    }

    .btn-outline {
      background: transparent;
      border: 1px solid rgba(255, 255, 255, 0.2);
      color: white;
    }

    .btn-outline:hover {
      background: rgba(255, 255, 255, 0.1);
    }

    .btn-success {
      background: linear-gradient(135deg, var(--secondary), #0d9488);
      color: white;
      box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
    }

    .btn-success:hover {
      box-shadow: 0 6px 16px rgba(16, 185, 129, 0.4);
      transform: translateY(-2px);
    }

    .btn-danger {
      background: linear-gradient(135deg, var(--accent), #e11d48);
      color: white;
    }

    .btn-danger:hover {
      box-shadow: 0 4px 12px rgba(244, 63, 94, 0.3);
    }

    .btn-secondary {
      background: rgba(255, 255, 255, 0.1);
      color: white;
    }

    .btn-secondary:hover {
      background: rgba(255, 255, 255, 0.15);
    }

    .card {
      background: rgba(30, 41, 59, 0.7);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.1);
      border-radius: 16px;
      overflow: hidden;
      box-shadow: var(--card-shadow);
      transition: var(--transition);
    }

    .card:hover {
      box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
      transform: translateY(-5px);
    }

    .card-header {
      padding: 1.25rem 1.5rem;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .card-header.primary {
      background: linear-gradient(135deg, rgba(99, 102, 241, 0.2), rgba(79, 70, 229, 0.2));
    }

    .card-body {
      padding: 1.5rem;
    }

    .form-group {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      margin-bottom: 1.5rem;
    }

    .form-row {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      margin-bottom: 1.5rem;
    }

    .form-control {
      background: rgba(15, 23, 42, 0.5);
      border: 1px solid rgba(255, 255, 255, 0.1);
      border-radius: 12px;
      padding: 0.75rem 1rem;
      color: white;
      font-family: 'Outfit', sans-serif;
      font-size: 1rem;
      transition: var(--transition);
      width: 100%;
    }

    .form-control:focus {
      outline: none;
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.3);
    }

    .form-control::placeholder {
      color: rgba(255, 255, 255, 0.5);
    }

    .input-group {
      display: flex;
      align-items: stretch;
    }

    .input-group .form-control {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
      flex: 1;
    }

    .input-group .btn {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    .table-container {
      overflow-x: auto;
      border-radius: 12px;
      background: rgba(15, 23, 42, 0.3);
    }

    .table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0;
    }

    .table th {
      background: rgba(15, 23, 42, 0.5);
      padding: 1rem;
      text-align: left;
      font-weight: 600;
      color: rgba(255, 255, 255, 0.9);
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .table td {
      padding: 1rem;
      border-bottom: 1px solid rgba(255, 255, 255, 0.05);
      transition: var(--transition);
    }

    .table tr:last-child td {
      border-bottom: none;
    }

    .table tr:hover td {
      background: rgba(255, 255, 255, 0.05);
    }

    .badge {
      display: inline-block;
      padding: 0.35em 0.65em;
      font-size: 0.85em;
      font-weight: 500;
      line-height: 1;
      text-align: center;
      white-space: nowrap;
      vertical-align: baseline;
      border-radius: 8px;
      background: rgba(99, 102, 241, 0.2);
      color: var(--primary-light);
      border: 1px solid rgba(99, 102, 241, 0.3);
      margin: 0.15rem;
    }

    .alert {
      padding: 1rem;
      border-radius: 12px;
      margin-bottom: 1rem;
    }

    .alert-warning {
      background: rgba(250, 204, 21, 0.1);
      border: 1px solid rgba(250, 204, 21, 0.3);
      color: #facc15;
    }

    .modal {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(15, 23, 42, 0.8);
      backdrop-filter: blur(5px);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1000;
      opacity: 0;
      visibility: hidden;
      transition: var(--transition);
    }

    .modal.show {
      opacity: 1;
      visibility: visible;
    }

    .modal-dialog {
      width: 100%;
      max-width: 500px;
      margin: 1.75rem auto;
      transform: translateY(-20px);
      transition: var(--transition);
    }

    .modal.show .modal-dialog {
      transform: translateY(0);
    }

    .modal-content {
      background: linear-gradient(135deg, rgba(30, 41, 59, 0.95), rgba(15, 23, 42, 0.95));
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.1);
      border-radius: 16px;
      box-shadow: 0 15px 50px rgba(0, 0, 0, 0.3);
      overflow: hidden;
    }

    .modal-header {
      padding: 1.25rem 1.5rem;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

    .modal-title {
      font-weight: 600;
      font-size: 1.25rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .btn-close {
      background: transparent;
      border: none;
      color: rgba(255, 255, 255, 0.7);
      font-size: 1.5rem;
      cursor: pointer;
      transition: var(--transition);
    }

    .btn-close:hover {
      color: white;
    }

    .modal-body {
      padding: 1.5rem;
    }

    .modal-footer {
      padding: 1.25rem 1.5rem;
      border-top: 1px solid rgba(255, 255, 255, 0.1);
      display: flex;
      justify-content: flex-end;
      gap: 0.75rem;
    }

    .modal-keyword-row {
      margin-bottom: 0.75rem;
      animation: fadeIn 0.3s ease-out;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .footer {
      margin-top: 5rem;
      padding: 2rem 0;
      background: linear-gradient(135deg, rgba(30, 41, 59, 0.7), rgba(15, 23, 42, 0.7));
      backdrop-filter: blur(10px);
      border-top: 1px solid rgba(255, 255, 255, 0.1);
    }

    .footer-content {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 1.5rem;
    }

    .social-links {
      display: flex;
      gap: 1rem;
    }

    .social-link {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.1);
      color: white;
      transition: var(--transition);
    }

    .social-link:hover {
      background: var(--primary);
      transform: translateY(-3px);
    }

    .copyright {
      font-size: 1rem;
      color: rgba(255, 255, 255, 0.7);
    }

    .copyright a {
      color: var(--primary-light);
      text-decoration: none;
      transition: var(--transition);
    }

    .copyright a:hover {
      color: white;
    }

    .made-with {
      font-size: 0.9rem;
      color: rgba(255, 255, 255, 0.5);
      display: flex;
      align-items: center;
      gap: 0.35rem;
    }

    .heart {
      color: var(--accent);
      animation: heartbeat 1.5s infinite;
    }

    @keyframes heartbeat {
      0%, 100% { transform: scale(1); }
      50% { transform: scale(1.15); }
    }

    /* Responsive */
    @media (min-width: 768px) {
      .form-row {
        flex-wrap: nowrap;
      }
    }

    /* Floating elements */
    .floating-element {
      position: absolute;
      border-radius: 50%;
      filter: blur(60px);
      z-index: -1;
      opacity: 0.4;
    }

    .floating-1 {
      width: 300px;
      height: 300px;
      background: var(--primary);
      top: -150px;
      right: -150px;
      animation: float1 20s infinite alternate;
    }

    .floating-2 {
      width: 200px;
      height: 200px;
      background: var(--secondary);
      bottom: 20%;
      left: -100px;
      animation: float2 15s infinite alternate;
    }

    @keyframes float1 {
      0% { transform: translate(0, 0) rotate(0deg); }
      100% { transform: translate(-50px, 50px) rotate(180deg); }
    }

    @keyframes float2 {
      0% { transform: translate(0, 0) rotate(0deg); }
      100% { transform: translate(50px, -30px) rotate(-180deg); }
    }
  </style>
</head>
<body>
  <div class="floating-element floating-1"></div>
  <div class="floating-element floating-2"></div>

  <header class="site-header">
    <div class="container">
      <div class="header-content">
        <div>
          <h1 class="site-title">CozyHomeStays Admin</h1>
          <p class="site-subtitle">A beautiful way to manage your properties and SEO</p>
        </div>
        <a href="/seo/logout" class="btn btn-primary">
          <i class="bi bi-box-arrow-right"></i> Logout
        </a>
      </div>
    </div>
  </header>

  <main class="container" style="margin-top: 2rem; margin-bottom: 2rem; height: 70vh;">
    <h2 class="mb-4" style="margin-bottom: 1.5rem; font-weight: 600; font-size: 1.75rem;">Manage SEO Keywords</h2>

    <!-- Add SEO Keyword Form -->
 

    <!-- SEO Keywords Table -->
    <div class="card">
      <div class="card-header primary">
        <span style="display: flex; align-items: center; gap: 0.5rem;">
          <i class="bi bi-card-list"></i> Current SEO Keywords
        </span>
        <button class="btn btn-outline" onclick="openEditKeywordsModal()">
          <i class="bi bi-pencil"></i> Add
        </button>
      </div>
    <div class="card-body">
  <% if (seo.seokeywords && seo.seokeywords.length) { %>
    <div class="table-container">
      <table class="table">
        <tbody>
          <% seo.seokeywords.forEach(function(kw, idx) { %>
            <% if (idx % 5 === 0) { %>
              <tr>
            <% } %>
            <td><span class="badge"><%= kw %></span></td>
            <% if (idx % 5 === 4 || idx === seo.seokeywords.length - 1) { %>
              </tr>
            <% } %>
          <% }); %>
        </tbody>
      </table>
    </div>
  <% } else { %>
    <div class="alert alert-warning">No SEO keywords found.</div>
  <% } %>
</div>
    </div>
  </main>

  <!-- Edit Keywords Modal -->
  <div class="modal" id="editKeywordsModal" tabindex="-1" aria-labelledby="editKeywordsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <form class="modal-content" id="editKeywordsForm" method="POST" action="/seos/edit">
        <div class="modal-header">
          <h5 class="modal-title" id="editKeywordsModalLabel">
            <i class="bi bi-pencil"></i> Edit SEO Keywords
          </h5>
          <button type="button" class="btn-close" onclick="closeModal()">
            <i class="bi bi-x"></i>
          </button>
        </div>
        <div class="modal-body">
          <!-- Add input at top -->
          <div class="input-group" style="margin-bottom: 1.5rem;">
            <input type="text" id="modalAddKeywordInput" class="form-control" placeholder="Add new SEO keyword">
            <button type="button" class="btn btn-primary" onclick="modalAddKeyword()">
              <i class="bi bi-plus"></i> Add
            </button>
          </div>
          <!-- List all keywords as inputs below -->
          <div id="modal-keywords-list">
            <% if (seo.seokeywords && seo.seokeywords.length) { %>
              <% seo.seokeywords.reverse().forEach(function(kw) { %>
                <div class="input-group modal-keyword-row">
                  <input type="text" name="seokeywords" value="<%= kw %>" class="form-control" required>
                  <button type="button" class="btn btn-danger" onclick="removeModalKeyword(this)">
                    <i class="bi bi-trash"></i>
                  </button>
                </div>
              <% }) %>
            <% } else { %>
              <!-- If no keywords, show none initially -->
            <% } %>
          </div>
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-success">
            <i class="bi bi-check-lg"></i> Save Changes
          </button>
          <button type="button" class="btn btn-secondary" onclick="closeModal()">
            Cancel
          </button>
        </div>
      </form>
    </div>
  </div>

  <footer class="footer">
    <div class="container">
      <div class="footer-content">
        <div class="social-links">
          <a href="https://github.com/" class="social-link" target="_blank" rel="noopener">
            <i class="bi bi-github"></i>
          </a>
          <a href="mailto:support@cozyhomestays.com" class="social-link">
            <i class="bi bi-envelope"></i>
          </a>
          <a href="https://twitter.com/" class="social-link" target="_blank" rel="noopener">
            <i class="bi bi-twitter"></i>
          </a>
        </div>
        <div class="copyright">
          &copy; <%= new Date().getFullYear() %> CozyHomeStays &bull; All rights reserved. | 
          <a href="#">Privacy Policy</a>
        </div>
        <div class="made-with">
          Designed with <i class="bi bi-heart-fill heart"></i> by CozyHomeStays Dev Team
        </div>
      </div>
    </div>
  </footer>

  <script>
    // Modal logic
    const modal = document.getElementById('editKeywordsModal');
    
    function openEditKeywordsModal() {
      modal.classList.add('show');
      document.body.style.overflow = 'hidden';
    }
    
    function closeModal() {
      modal.classList.remove('show');
      document.body.style.overflow = '';
    }
    
    function modalAddKeyword() {
      const input = document.getElementById('modalAddKeywordInput');
      const value = input.value.trim();
      if (!value) return;
      
      // Prevent duplicates
      const existing = Array.from(document.querySelectorAll('#modal-keywords-list input[name="seokeywords"]'))
        .map(i => i.value.trim().toLowerCase());
      
      if (existing.includes(value.toLowerCase())) {
        input.value = '';
        input.focus();
        showNotification('Keyword already exists!');
        return;
      }
      
      const div = document.createElement('div');
      div.className = 'input-group modal-keyword-row';
      div.innerHTML = `
        <input type="text" name="seokeywords" value="${value.replace(/"/g, '&quot;')}" class="form-control" required>
        <button type="button" class="btn btn-danger" onclick="removeModalKeyword(this)">
          <i class="bi bi-trash"></i>
        </button>
      `;
      
      document.getElementById('modal-keywords-list').appendChild(div);
      input.value = '';
      input.focus();
      
      showNotification('Keyword added!');
    }
    
    function removeModalKeyword(btn) {
      const row = btn.closest('.modal-keyword-row');
      row.style.opacity = '0';
      row.style.transform = 'translateY(-10px)';
      
      setTimeout(() => {
        row.remove();
      }, 300);
    }
    
    // Notification system
    function showNotification(message) {
      // Create notification element if it doesn't exist
      let notification = document.getElementById('notification');
      
      if (!notification) {
        notification = document.createElement('div');
        notification.id = 'notification';
        notification.style.position = 'fixed';
        notification.style.bottom = '20px';
        notification.style.right = '20px';
        notification.style.padding = '12px 20px';
        notification.style.background = 'rgba(99, 102, 241, 0.9)';
        notification.style.color = 'white';
        notification.style.borderRadius = '8px';
        notification.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';
        notification.style.zIndex = '2000';
        notification.style.transform = 'translateY(20px)';
        notification.style.opacity = '0';
        notification.style.transition = 'all 0.3s ease-out';
        document.body.appendChild(notification);
      }
      
      // Set message and show
      notification.textContent = message;
      
      // Show with animation
      setTimeout(() => {
        notification.style.transform = 'translateY(0)';
        notification.style.opacity = '1';
      }, 10);
      
      // Hide after 3 seconds
      setTimeout(() => {
        notification.style.transform = 'translateY(20px)';
        notification.style.opacity = '0';
      }, 3000);
    }
    
    // Form submission animation
    document.getElementById('seoForm').addEventListener('submit', function(e) {
      const submitBtn = this.querySelector('button[type="submit"]');
      submitBtn.innerHTML = '<i class="bi bi-arrow-repeat"></i> Adding...';
      submitBtn.disabled = true;
      
      // This is just for demo purposes - in a real app, you'd let the form submit normally
      if (this.checkValidity()) {
        e.preventDefault();
        setTimeout(() => {
          submitBtn.innerHTML = '<i class="bi bi-check-lg"></i> Added!';
          setTimeout(() => {
            submitBtn.innerHTML = '<i class="bi bi-plus"></i> Add SEO Keyword';
            submitBtn.disabled = false;
            this.reset();
            showNotification('Keyword added successfully!');
          }, 1000);
        }, 1000);
      }
    });
    
    // Close modal when clicking outside
    window.addEventListener('click', function(e) {
      if (e.target === modal) {
        closeModal();
      }
    });
    
    // Escape key to close modal
    window.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && modal.classList.contains('show')) {
        closeModal();
      }
    });
    
    // Add floating animation to elements
    document.addEventListener('DOMContentLoaded', function() {
      // Add subtle parallax effect
      document.addEventListener('mousemove', function(e) {
        const moveX = (e.clientX - window.innerWidth / 2) / 50;
        const moveY = (e.clientY - window.innerHeight / 2) / 50;
        
        document.querySelectorAll('.floating-element').forEach(elem => {
          elem.style.transform = `translate(${moveX}px, ${moveY}px)`;
        });
      });
    });
  </script>
</body>
</html>